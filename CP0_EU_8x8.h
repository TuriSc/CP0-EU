/**
 * @file CP0_EU_8x8.h
 * @brief Non-standard character set and 8x8 font supporting many European languages.
 * @author Turi Scandurra
 * @copyright Released under a MIT No Attribution license.
 * @version v1.0.0
 */

/* CP0-EU character set

  Ά Έ Ή Ί Ό Ύ Ώ ΐ Α Β Γ Δ Ε Ζ Η
Θ Ι Κ Λ Μ Ν Ξ Ο Π Ρ Σ Τ Υ Φ Χ Ψ
Ω ! " # $ % & ' ( ) * + , - . /
0 1 2 3 4 5 6 7 8 9 : ; < = > ?
@ A B C D E F G H I J K L M N O
P Q R S T U V W X Y Z [ \ ] ^ _
` a b c d e f g h i j k l m n o
p q r s t u v w x y z { | } ~ ¡
€ Œ œ Š š … Ž ž Ÿ Ϊ Ϋ ά έ ή ί ΰ
α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π
ρ ς σ τ υ φ χ ψ ω ϊ ϋ ό ύ ώ Ą ą
Ć ć Ę ę Ł ł Ń ń Ś ś Ź ź Ż ż ° ¿
À Á Â Ã Ä Å Æ Ç È É Ê Ë Ì Í Î Ï
Ð Ñ Ò Ó Ô Õ Ö • Ø Ù Ú Û Ü Ý Þ ß
à á â ã ä å æ ç è é ê ë ì í î ï
ð ñ ò ó ô õ ö £ ø ù ú û ü ý þ ÿ
*/

#ifndef CP0_EU_8x8_H
#define CP0_EU_8x8_H

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief 8x8 font data for CP0-EU character set.
 * @details Each character is represented by an array of 8 bytes, where each byte
 *          represents a row of pixels in the character.
 */
static const char CP0_EU_8x8[256][8] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //   U+0020
    {0x98, 0xbc, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Ά U+0386
    {0xbe, 0xb2, 0x30, 0x3c, 0x30, 0x32, 0x3e, 0x00}, // Έ U+0388
    {0xb6, 0xb6, 0x36, 0x3e, 0x36, 0x36, 0x36, 0x00}, // Ή U+0389
    {0xbc, 0x98, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Ί U+038a
    {0xb8, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00}, // Ό U+038c
    {0xb6, 0xb6, 0x36, 0x1c, 0x08, 0x08, 0x1c, 0x00}, // Ύ U+038e
    {0xb8, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0xee, 0x00}, // Ώ U+038f
    {0x08, 0xc3, 0x18, 0x18, 0x18, 0x18, 0x0c, 0x00}, // ΐ U+0390
    {0x18, 0x3c, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Α U+0391
    {0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00}, // Β U+0392
    {0x7e, 0x66, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00}, // Γ U+0393
    {0x10, 0x38, 0x38, 0x6c, 0x6c, 0xc6, 0xfe, 0x00}, // Δ U+0394
    {0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00}, // Ε U+0395
    {0xfe, 0xc6, 0x8c, 0x18, 0x32, 0x66, 0xfe, 0x00}, // Ζ U+0396
    {0x66, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x66, 0x00}, // Η U+0397
    {0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0x6c, 0x38, 0x00}, // Θ U+0398
    {0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Ι U+0399
    {0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00}, // Κ U+039a
    {0x10, 0x38, 0x38, 0x6c, 0x6c, 0xc6, 0xc6, 0x00}, // Λ U+039b
    {0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00}, // Μ U+039c
    {0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00}, // Ν U+039d
    {0xfe, 0xc6, 0x00, 0x7c, 0x00, 0xc6, 0xfe, 0x00}, // Ξ U+039e
    {0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00}, // Ο U+039f
    {0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00}, // Π U+03a0
    {0xfc, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00}, // Ρ U+03a1
    {0xfe, 0xc6, 0x60, 0x30, 0x60, 0xc6, 0xfe, 0x00}, // Σ U+03a3
    {0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Τ U+03a4
    {0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x3c, 0x00}, // Υ U+03a5
    {0x18, 0x7e, 0xdb, 0xdb, 0xdb, 0x7e, 0x18, 0x00}, // Φ U+03a6
    {0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00}, // Χ U+03a7
    {0xdb, 0xdb, 0xdb, 0x7e, 0x18, 0x18, 0x3c, 0x00}, // Ψ U+03a8
    {0x7c, 0xc6, 0xc6, 0xc6, 0x6c, 0x6c, 0xee, 0x00}, // Ω U+03a9
    {0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x00}, // ! U+0021
    {0x66, 0x66, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00}, // " U+0022
    {0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00}, // # U+0023
    {0x00, 0x08, 0x3e, 0x40, 0x3c, 0x02, 0x7c, 0x08}, // $ U+0024
    {0x02, 0xc6, 0xcc, 0x18, 0x33, 0x63, 0x40, 0x00}, // % U+0025
    {0x78, 0xcc, 0x78, 0x70, 0xda, 0xcc, 0x7a, 0x00}, // & U+0026
    {0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00}, // ' U+0027
    {0x1c, 0x30, 0x60, 0x60, 0x60, 0x30, 0x1c, 0x00}, // ( U+0028
    {0x70, 0x18, 0x0c, 0x0c, 0x0c, 0x18, 0x70, 0x00}, // ) U+0029
    {0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00}, // * U+002a
    {0x00, 0x10, 0x10, 0x7c, 0x10, 0x10, 0x00, 0x00}, // + U+002b
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30}, // , U+002c
    {0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00}, // - U+002d
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00}, // . U+002e
    {0x02, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x40, 0x00}, // / U+002f
    {0x7c, 0xc6, 0xc6, 0xd6, 0xc6, 0xc6, 0x7c, 0x00}, // 0 U+0030
    {0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00}, // 1 U+0031
    {0x7c, 0xc6, 0x06, 0x1c, 0x70, 0xc0, 0xfe, 0x00}, // 2 U+0032
    {0x7c, 0x06, 0x06, 0x3c, 0x06, 0x06, 0x7c, 0x00}, // 3 U+0033
    {0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x00}, // 4 U+0034
    {0x7e, 0x60, 0x7c, 0x06, 0x06, 0x06, 0x7c, 0x00}, // 5 U+0035
    {0x3c, 0x60, 0xc0, 0xfc, 0xc6, 0xc6, 0x7c, 0x00}, // 6 U+0036
    {0x7e, 0x66, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00}, // 7 U+0037
    {0x7c, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x7c, 0x00}, // 8 U+0038
    {0x7c, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00}, // 9 U+0039
    {0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00}, // : U+003a
    {0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x30, 0x00}, // ; U+003b
    {0x00, 0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0x00}, // < U+003c
    {0x00, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x00, 0x00}, // = U+003d
    {0x00, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x00, 0x00}, // > U+003e
    {0x7c, 0xc6, 0xc6, 0x0c, 0x18, 0x00, 0x18, 0x00}, // ? U+003f
    {0x7c, 0xc6, 0xde, 0xd2, 0xde, 0xc0, 0x7e, 0x00}, // @ U+0040
    {0x3c, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x66, 0x00}, // A U+0041
    {0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0x00}, // B U+0042
    {0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00}, // C U+0043
    {0xf8, 0xcc, 0xc6, 0xc6, 0xc6, 0xcc, 0xf8, 0x00}, // D U+0044
    {0x7e, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x7e, 0x00}, // E U+0045
    {0x7e, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x60, 0x00}, // F U+0046
    {0x3c, 0x66, 0xc6, 0xc0, 0xce, 0x66, 0x3c, 0x00}, // G U+0047
    {0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00}, // H U+0048
    {0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00}, // I U+0049
    {0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c, 0x00}, // J U+004a
    {0xc6, 0xcc, 0xd8, 0xf0, 0xd8, 0xcc, 0xc6, 0x00}, // K U+004b
    {0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7e, 0x00}, // L U+004c
    {0xc6, 0xee, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0x00}, // M U+004d
    {0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00}, // N U+004e
    {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00}, // O U+004f
    {0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0xc0, 0x00}, // P U+0050
    {0x7c, 0xc6, 0xc6, 0xc6, 0xf6, 0xdc, 0x78, 0x0e}, // Q U+0051
    {0xfc, 0xc6, 0xc6, 0xfc, 0xd8, 0xcc, 0xc6, 0x00}, // R U+0052
    {0x7c, 0xc6, 0x60, 0x38, 0x0c, 0xc6, 0x7c, 0x00}, // S U+0053
    {0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00}, // T U+0054
    {0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00}, // U U+0055
    {0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00}, // V U+0056
    {0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00}, // W U+0057
    {0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00}, // X U+0058
    {0xc6, 0xc6, 0xc6, 0x7c, 0x18, 0x18, 0x18, 0x00}, // Y U+0059
    {0xfe, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xfe, 0x00}, // Z U+005a
    {0x7c, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7c, 0x00}, // [ U+005b
    {0x40, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00}, // \ U+005c
    {0x7c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x7c, 0x00}, // ] U+005d
    {0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00}, // ^ U+005e
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00}, // _ U+005f
    {0x30, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00}, // ` U+0060
    {0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // a U+0061
    {0x60, 0x60, 0x7c, 0x66, 0x66, 0x66, 0x7c, 0x00}, // b U+0062
    {0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0x7e, 0x00}, // c U+0063
    {0x06, 0x06, 0x3e, 0x66, 0x66, 0x66, 0x3e, 0x00}, // d U+0064
    {0x00, 0x00, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x00}, // e U+0065
    {0x1e, 0x30, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x00}, // f U+0066
    {0x00, 0x00, 0x7e, 0xc6, 0xc6, 0x7e, 0x06, 0xfc}, // g U+0067
    {0x60, 0x60, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x00}, // h U+0068
    {0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x00}, // i U+0069
    {0x06, 0x00, 0x06, 0x06, 0x06, 0x06, 0x66, 0x3c}, // j U+006a
    {0x60, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0x00}, // k U+006b
    {0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x00}, // l U+006c
    {0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xc6, 0x00}, // m U+006d
    {0x00, 0x00, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x00}, // n U+006e
    {0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00}, // o U+006f
    {0x00, 0x00, 0x7c, 0x66, 0x66, 0x7c, 0x60, 0x60}, // p U+0070
    {0x00, 0x00, 0x3e, 0x66, 0x66, 0x3e, 0x06, 0x06}, // q U+0071
    {0x00, 0x00, 0x6c, 0x76, 0x60, 0x60, 0x60, 0x00}, // r U+0072
    {0x00, 0x00, 0x3e, 0x70, 0x3c, 0x0e, 0x7c, 0x00}, // s U+0073
    {0x18, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x0e, 0x00}, // t U+0074
    {0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00}, // u U+0075
    {0x00, 0x00, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00}, // v U+0076
    {0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xfe, 0x6c, 0x00}, // w U+0077
    {0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00}, // x U+0078
    {0x00, 0x00, 0x66, 0x66, 0x66, 0x3e, 0x06, 0x7c}, // y U+0079
    {0x00, 0x00, 0x7e, 0x0c, 0x18, 0x30, 0x7e, 0x00}, // z U+007a
    {0x0e, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0e, 0x00}, // { U+007b
    {0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18}, // | U+007c
    {0x70, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x70, 0x00}, // } U+007d
    {0x00, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00}, // ~ U+007e
    {0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00}, // ¡ U+00a1
    {0x3c, 0x62, 0xf8, 0x60, 0xf8, 0x62, 0x3c, 0x00}, // € U+20ac
    {0x3e, 0x6c, 0xcc, 0xce, 0xcc, 0x6c, 0x3e, 0x00}, // Œ U+0152
    {0x00, 0x00, 0x7e, 0xd8, 0xde, 0xd8, 0x7e, 0x00}, // œ U+0153
    {0x66, 0x3c, 0x66, 0x30, 0x0c, 0x66, 0x3c, 0x00}, // Š U+0160
    {0x36, 0x1c, 0x3e, 0x60, 0x3c, 0x06, 0x7c, 0x00}, // š U+0161
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0xdb, 0x00}, // … U+2026
    {0xc3, 0x7e, 0x66, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // Ž U+017d
    {0x66, 0x3c, 0x7e, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // ž U+017e
    {0x66, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x3c, 0x00}, // Ÿ U+0178
    {0x66, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Ϊ U+03aa
    {0x66, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x3c, 0x00}, // Ϋ U+03ab
    {0x18, 0x00, 0x76, 0xdc, 0xcc, 0xdc, 0x76, 0x00}, // ά U+03ac
    {0x18, 0x00, 0x3e, 0x60, 0x38, 0x60, 0x3e, 0x00}, // έ U+03ad
    {0x18, 0x00, 0x5c, 0x76, 0x36, 0x36, 0x36, 0x00}, // ή U+03ae
    {0x30, 0x00, 0x30, 0x30, 0x30, 0x30, 0x18, 0x00}, // ί U+03af
    {0x08, 0xc3, 0x00, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ΰ U+03b0
    {0x00, 0x00, 0x76, 0xdc, 0xcc, 0xdc, 0x76, 0x00}, // α U+03b1
    {0x3c, 0x66, 0x66, 0x7c, 0x66, 0x7c, 0x60, 0x60}, // β U+03b2
    {0x00, 0x00, 0x66, 0x3c, 0x18, 0x3c, 0x66, 0x3c}, // γ U+03b3
    {0x3c, 0x66, 0x30, 0x3c, 0x66, 0x66, 0x3c, 0x00}, // δ U+03b4
    {0x00, 0x00, 0x3e, 0x60, 0x38, 0x60, 0x3e, 0x00}, // ε U+03b5
    {0x7e, 0x18, 0x30, 0x60, 0x60, 0x3c, 0x06, 0x1c}, // ζ U+03b6
    {0x00, 0x00, 0x5c, 0x76, 0x36, 0x36, 0x36, 0x00}, // η U+03b7
    {0x3c, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x3c, 0x00}, // θ U+03b8
    {0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x18, 0x00}, // ι U+03b9
    {0x00, 0x00, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0x00}, // κ U+03ba
    {0x38, 0x6c, 0x06, 0x1e, 0x36, 0x66, 0x66, 0x00}, // λ U+03bb
    {0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xfe, 0xc0, 0xc0}, // μ U+03bc
    {0x00, 0x00, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00}, // ν U+03bd
    {0x7e, 0x18, 0x30, 0x1c, 0x30, 0x1c, 0x06, 0x1c}, // ξ U+03be
    {0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ο U+03bf
    {0x00, 0x00, 0x7e, 0x66, 0x66, 0x66, 0x66, 0x00}, // π U+03c0
    {0x00, 0x00, 0x3c, 0x66, 0x66, 0x7c, 0x60, 0x60}, // ρ U+03c1
    {0x00, 0x00, 0x7c, 0xc6, 0xc0, 0x7c, 0x06, 0x1c}, // ς U+03c2
    {0x00, 0x00, 0x3e, 0x6c, 0x66, 0x66, 0x3c, 0x00}, // σ U+03c3
    {0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x0c, 0x00}, // τ U+03c4
    {0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // υ U+03c5
    {0x00, 0xdc, 0xd6, 0xd6, 0x7c, 0x10, 0x10, 0x00}, // φ U+03c6
    {0x00, 0x00, 0x66, 0x3c, 0x18, 0x3c, 0x66, 0x00}, // χ U+03c7
    {0x00, 0xd6, 0xd6, 0xd6, 0x7c, 0x10, 0x10, 0x00}, // ψ U+03c8
    {0x00, 0x00, 0xc6, 0xd6, 0xd6, 0xd6, 0x6c, 0x00}, // ω U+03c9
    {0x66, 0x00, 0x18, 0x18, 0x18, 0x18, 0x0c, 0x00}, // ϊ U+03ca
    {0x66, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ϋ U+03cb
    {0x18, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ό U+03cc
    {0x18, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ύ U+03cd
    {0x18, 0x00, 0xc6, 0xd6, 0xd6, 0xd6, 0x6c, 0x00}, // ώ U+03ce
    {0x00, 0x3c, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x03}, // Ą U+0104
    {0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x03}, // ą U+0105
    {0x03, 0x3c, 0x66, 0xc0, 0xc0, 0x66, 0x3c, 0x00}, // Ć U+0106
    {0x0c, 0x10, 0x7c, 0xc6, 0xc0, 0xc0, 0x7e, 0x00}, // ć U+0107
    {0x7e, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x7e, 0x03}, // Ę U+0118
    {0x00, 0x00, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x03}, // ę U+0119
    {0x60, 0x60, 0x68, 0x70, 0xe0, 0x60, 0x7e, 0x00}, // Ł U+0141
    {0x30, 0x30, 0x34, 0x78, 0xb0, 0x30, 0x18, 0x00}, // ł U+0142
    {0x03, 0xe6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0x00}, // Ń U+0143
    {0x0c, 0x10, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x00}, // ń U+0144
    {0x03, 0x7c, 0xc6, 0x70, 0x1c, 0xc6, 0x7c, 0x00}, // Ś U+015a
    {0x0c, 0x10, 0x3e, 0x70, 0x3c, 0x0e, 0x7c, 0x00}, // ś U+015b
    {0x03, 0x7e, 0x66, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // Ź U+0179
    {0x0c, 0x10, 0x7e, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // ź U+017a
    {0x18, 0x7e, 0x66, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // Ż U+017b
    {0x18, 0x00, 0x7e, 0x4c, 0x18, 0x32, 0x7e, 0x00}, // ż U+017c
    {0x00, 0x3c, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00}, // ° U+00b0
    {0x18, 0x00, 0x18, 0x30, 0x63, 0x63, 0x3e, 0x00}, // ¿ U+00bf
    {0x70, 0x00, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // À U+00c0
    {0x0e, 0x00, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Á U+00c1
    {0x7e, 0xc3, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Â U+00c2
    {0x76, 0xdc, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Ã U+00c3
    {0x66, 0x00, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Ä U+00c4
    {0x18, 0x24, 0x3c, 0x66, 0x7e, 0x66, 0x66, 0x00}, // Å U+00c5
    {0x1f, 0x36, 0x66, 0x7f, 0x66, 0x66, 0x67, 0x00}, // Æ U+00c6
    {0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x30, 0x60}, // Ç U+00c7
    {0x70, 0x00, 0x7c, 0x60, 0x78, 0x60, 0x7c, 0x00}, // È U+00c8
    {0x1c, 0x00, 0x7c, 0x60, 0x78, 0x60, 0x7c, 0x00}, // É U+00c9
    {0x3c, 0x66, 0x7c, 0x60, 0x78, 0x60, 0x7c, 0x00}, // Ê U+00ca
    {0x66, 0x00, 0x7c, 0x60, 0x78, 0x60, 0x7c, 0x00}, // Ë U+00cb
    {0x70, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Ì U+00cc
    {0x0e, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Í U+00cd
    {0x7e, 0xc3, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Î U+00ce
    {0x66, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00}, // Ï U+00cf
    {0xf8, 0x6c, 0x66, 0xf6, 0x66, 0x6c, 0xf8, 0x00}, // Ð U+00d0
    {0x7e, 0x00, 0x66, 0x76, 0x7e, 0x6e, 0x66, 0x00}, // Ñ U+00d1
    {0xc0, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x00}, // Ò U+00d2
    {0x06, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x00}, // Ó U+00d3
    {0x7c, 0xc6, 0x38, 0x6c, 0xc6, 0x6c, 0x38, 0x00}, // Ô U+00d4
    {0x76, 0xdc, 0x38, 0x6c, 0xc6, 0x6c, 0x38, 0x00}, // Õ U+00d5
    {0xc6, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x00}, // Ö U+00d6
    {0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00}, // • U+2022
    {0x3a, 0x6c, 0xce, 0xd6, 0xe6, 0x6c, 0xb8, 0x00}, // Ø U+00d8
    {0x70, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // Ù U+00d9
    {0x0e, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // Ú U+00da
    {0x3c, 0x66, 0x00, 0x66, 0x66, 0x66, 0x3c, 0x00}, // Û U+00db
    {0x66, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00}, // Ü U+00dc
    {0x0e, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x3c, 0x00}, // Ý U+00dd
    {0xf0, 0x60, 0x7c, 0x66, 0x66, 0x7c, 0x60, 0xf0}, // Þ U+00de
    {0x78, 0xcc, 0xcc, 0xd8, 0xcc, 0xc6, 0xcc, 0x00}, // ß U+00df
    {0x30, 0x10, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // à U+00e0
    {0x18, 0x20, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // á U+00e1
    {0x7c, 0x82, 0x38, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // â U+00e2
    {0x76, 0xdc, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // ã U+00e3
    {0x66, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // ä U+00e4
    {0x78, 0xcc, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00}, // å U+00e5
    {0x00, 0x00, 0xfc, 0x32, 0x7e, 0x98, 0xee, 0x00}, // æ U+00e6
    {0x00, 0x00, 0x3e, 0x60, 0x60, 0x3e, 0x18, 0x30}, // ç U+00e7
    {0x18, 0x08, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x00}, // è U+00e8
    {0x0c, 0x10, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x00}, // é U+00e9
    {0x7e, 0xc3, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x00}, // ê U+00ea
    {0x66, 0x00, 0x3c, 0x66, 0x7c, 0x60, 0x3e, 0x00}, // ë U+00eb
    {0x0c, 0x04, 0x38, 0x18, 0x18, 0x18, 0x18, 0x00}, // ì U+00ec
    {0x30, 0x40, 0x38, 0x18, 0x18, 0x18, 0x18, 0x00}, // í U+00ed
    {0x7c, 0x82, 0x38, 0x18, 0x18, 0x18, 0x18, 0x00}, // î U+00ee
    {0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x00}, // ï U+00ef
    {0x30, 0x7e, 0x0c, 0x7c, 0xcc, 0xcc, 0x78, 0x00}, // ð U+00f0
    {0x71, 0x8e, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x00}, // ñ U+00f1
    {0x18, 0x04, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ò U+00f2
    {0x18, 0x20, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ó U+00f3
    {0x7e, 0x81, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ô U+00f4
    {0x76, 0xdc, 0x00, 0x78, 0xcc, 0xcc, 0x78, 0x00}, // õ U+00f5
    {0x66, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00}, // ö U+00f6
    {0x1e, 0x32, 0x30, 0xfc, 0x30, 0x30, 0xfe, 0x00}, // £ U+00a3
    {0x00, 0x02, 0x7c, 0xce, 0xd6, 0xe6, 0x7c, 0x80}, // ø U+00f8
    {0x30, 0x10, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00}, // ù U+00f9
    {0x18, 0x20, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00}, // ú U+00fa
    {0x7e, 0x81, 0x66, 0x66, 0x66, 0x66, 0x3b, 0x00}, // û U+00fb
    {0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00}, // ü U+00fc
    {0x0e, 0x00, 0x66, 0x66, 0x66, 0x3e, 0x06, 0x3c}, // ý U+00fd
    {0xe0, 0x60, 0x7c, 0x66, 0x7c, 0x60, 0xe0, 0x00}, // þ U+00fe
    {0x66, 0x00, 0x66, 0x66, 0x66, 0x3e, 0x06, 0x7c}, // ÿ U+00ff
};

/**
 * @brief Character map for CP0-EU character set.
 * @details Maps each character code to its corresponding Unicode code point.
 */
static const uint16_t CHARMAP_CP0_EU[256] = {
    0x0020, 0x0386, 0x0388, 0x0389, 0x038a, 0x038c, 0x038e, 0x038f,
    0x0390, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397,
    0x0398, 0x0399, 0x039a, 0x039b, 0x039c, 0x039d, 0x039e, 0x039f,
    0x03a0, 0x03a1, 0x03a3, 0x03a4, 0x03a5, 0x03a6, 0x03a7, 0x03a8,
    0x03a9, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027,
    0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f,
    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037,
    0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f,
    0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,
    0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f,
    0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057,
    0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e, 0x005f,
    0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067,
    0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f,
    0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077,
    0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x00a1,
    0x20ac, 0x0152, 0x0153, 0x0160, 0x0161, 0x2026, 0x017d, 0x017e,
    0x0178, 0x03aa, 0x03ab, 0x03ac, 0x03ad, 0x03ae, 0x03af, 0x03b0,
    0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6, 0x03b7, 0x03b8,
    0x03b9, 0x03ba, 0x03bb, 0x03bc, 0x03bd, 0x03be, 0x03bf, 0x03c0,
    0x03c1, 0x03c2, 0x03c3, 0x03c4, 0x03c5, 0x03c6, 0x03c7, 0x03c8,
    0x03c9, 0x03ca, 0x03cb, 0x03cc, 0x03cd, 0x03ce, 0x0104, 0x0105,
    0x0106, 0x0107, 0x0118, 0x0119, 0x0141, 0x0142, 0x0143, 0x0144,
    0x015a, 0x015b, 0x0179, 0x017a, 0x017b, 0x017c, 0x00b0, 0x00bf,
    0x00c0, 0x00c1, 0x00c2, 0x00c3, 0x00c4, 0x00c5, 0x00c6, 0x00c7,
    0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x00cc, 0x00cd, 0x00ce, 0x00cf,
    0x00d0, 0x00d1, 0x00d2, 0x00d3, 0x00d4, 0x00d5, 0x00d6, 0x2022,
    0x00d8, 0x00d9, 0x00da, 0x00db, 0x00dc, 0x00dd, 0x00de, 0x00df,
    0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x00e4, 0x00e5, 0x00e6, 0x00e7,
    0x00e8, 0x00e9, 0x00ea, 0x00eb, 0x00ec, 0x00ed, 0x00ee, 0x00ef,
    0x00f0, 0x00f1, 0x00f2, 0x00f3, 0x00f4, 0x00f5, 0x00f6, 0x00a3,
    0x00f8, 0x00f9, 0x00fa, 0x00fb, 0x00fc, 0x00fd, 0x00fe, 0x00ff, 
};

/**
 * @brief Character width data for CP0-EU character set.
 * @details Each character's width is represented by two bytes: the leftmost pixel
 *          and the rightmost pixel. Assumes left-to-right, top-to-bottom (lrtb)
 *          order.
 */
static const uint8_t CP0_EU_8x8_offsets[512] = {
    1, 4, // Space is the only one defined manually
    0, 6,
    0, 6,
    0, 6,
    0, 5,
    0, 6,
    0, 6,
    0, 6,
    0, 7,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    0, 6,
    2, 5,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    0, 7,
    0, 6,
    0, 7,
    0, 6,
    3, 4,
    0, 6,
    0, 6,
    1, 6,
    0, 7,
    0, 6,
    2, 4,
    1, 5,
    1, 5,
    0, 7,
    1, 5,
    2, 4,
    1, 6,
    3, 4,
    1, 6,
    0, 6,
    1, 4,
    0, 6,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    3, 4,
    2, 4,
    1, 4,
    1, 6,
    2, 5,
    0, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    0, 6,
    0, 6,
    2, 5,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 5,
    1, 6,
    1, 5,
    0, 6,
    1, 6,
    2, 5,
    0, 6,
    1, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    2, 4,
    1, 6,
    1, 6,
    2, 4,
    0, 6,
    1, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    3, 4,
    1, 6,
    0, 6,
    3, 4,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    0, 7,
    0, 7,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    1, 6,
    2, 4,
    0, 7,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    2, 4,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    1, 7,
    0, 7,
    0, 7,
    0, 6,
    1, 7,
    1, 7,
    0, 6,
    0, 5,
    0, 7,
    1, 6,
    0, 7,
    1, 6,
    1, 7,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 7,
    1, 6,
    1, 6,
    0, 7,
    0, 6,
    1, 6,
    1, 6,
    1, 7,
    0, 6,
    1, 5,
    1, 5,
    1, 6,
    1, 6,
    1, 5,
    2, 6,
    0, 7,
    1, 6,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    2, 5,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    1, 6,
    1, 6,
    1, 6,
    0, 7,
    1, 6,
    2, 5,
    1, 4,
    0, 6,
    1, 6,
    0, 6,
    0, 7,
    1, 6,
    1, 6,
    0, 7,
    0, 6,
    1, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 6,
    0, 7,
    0, 6,
    1, 6,
    0, 6,
    1, 6,
};

/*
Πάντες άνθρωποι του ειδέναι ορέγονται φύσει.
All human beings by nature stretch themselves out towards knowing.
- Aristotle
*/

#ifdef __cplusplus
}
#endif
#endif //CP0_EU_8x8_H
